generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Apartment {
  id            Int                @id @default(autoincrement())
  name          String
  description   String?
  bedrooms      Int
  bathrooms     Int
  maxGuests     Int
  pricePerNight Float
  isActive      Boolean            @default(true)
  images        ApartmentImage[]
  amenities     ApartmentAmenity[]
  bookings      Booking[]
}

model ApartmentImage {
  id          Int       @id @default(autoincrement())
  apartment   Apartment @relation(fields: [apartmentId], references: [id])
  apartmentId Int
  imageUrl    String
  altText     String?
  isMain      Boolean   @default(false)
  sortOrder   Int       @default(0)
}

model Amenity {
  id         Int                @id @default(autoincrement())
  name       String             @unique
  apartments ApartmentAmenity[]
}

model ApartmentAmenity {
  id          Int       @id @default(autoincrement())
  apartment   Apartment @relation(fields: [apartmentId], references: [id])
  apartmentId Int
  amenity     Amenity   @relation(fields: [amenityId], references: [id])
  amenityId   Int
}

model Guest {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  phone     String?
  bookings  Booking[]
}

model Booking {
  id          Int       @id @default(autoincrement())
  guest       Guest     @relation(fields: [guestId], references: [id])
  guestId     Int
  apartment   Apartment @relation(fields: [apartmentId], references: [id])
  apartmentId Int
  checkIn     DateTime
  checkOut    DateTime
  guests      Int
  totalAmount Float
  notes       String?
  status      String    @default("PENDING")
  createdAt   DateTime  @default(now())
}
